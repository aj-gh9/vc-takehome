---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ethereum-deployment
  namespace: ethereum
---
apiVersion: v1
data:
  config.yaml: |
    accept-terms-of-use: true
    api-timeout-value: 120
    datadir: '/data/.ethereum'
    grpc-gateway-port: 3500
    execution-endpoint: http://localhost:8551
    jwt-secret: '/data/jwt.hex'
    monitoring-host: 0.0.0.0
    monitoring-port: 8080
    p2p-tcp-port: 13000
    p2p-udp-port: 12000
    rpc-host: 0.0.0.0
    rpc-port: 4000
    verbosity: info
    checkpoint-sync-url: https://beaconstate.info
    genesis-beacon-api-url: https://beaconstate.info
kind: ConfigMap
metadata:
  name: ethereum-prysm-config
  namespace: ethereum
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: ethereum
  name: ethereum
  namespace: ethereum
spec:
  clusterIP: None
  ports:
  - name: rpc
    port: 8545
    targetPort: rpc
  - name: prysm-rpc
    port: 4000
    targetPort: prysm-rpc
  - name: prysm-p2p-tcp
    port: 13000
    targetPort: prysm-p2p-tcp
  - name: prysm-p2p-udp
    port: 12000
    protocol: UDP
    targetPort: prysm-p2p-udp
  selector:
    app.kubernetes.io/name: ethereum
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: ethereum
  name: ethereum
  namespace: ethereum
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ethereum
  serviceName: ethereum
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: geth
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: ethereum
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - ethereum
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --config-file
        - /config/config.yaml
        image: gcr.io/prysmaticlabs/prysm/beacon-chain:v5.0.2@sha256:22c77c0ac02fd6ad9bddab8ec8c34ea2caa0257977f6a44e53427c3997efeebe
        imagePullPolicy: Always
        name: prysm
        ports:
        - containerPort: 8080
          name: metrics
        - containerPort: 4000
          name: prysm-rpc
        - containerPort: 13000
          name: prysm-p2p-tcp
        - containerPort: 12000
          name: prysm-p2p-udp
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 2
            memory: 4Gi
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /data
          name: ethereum-data
        - mountPath: /config
          name: ethereum-prysm-config
          readOnly: true
      - args:
        - --syncmode
        - snap
        - --pprof
        - --pprof.addr=0.0.0.0
        - --pprof.port=6060
        - --metrics
        - --http
        - --http.api
        - eth,net,engine,admin
        - --http.addr=0.0.0.0
        - --http.port=8545
        - --http.vhosts
        - '*'
        - --http.corsdomain
        - '*'
        - --authrpc.jwtsecret=/data/jwt.hex
        - --datadir
        - /data/.ethereum
        command:
        - /usr/local/bin/geth
        image: ethereum/client-go:v1.13.14@sha256:29710a6410e73c465d331ffcbeaaf7e3527c32105e9235287af86208973478e4
        imagePullPolicy: Always
        name: geth
        ports:
        - containerPort: 6060
          name: metrics
        - containerPort: 8545
          name: rpc
        resources:
          limits:
            cpu: 3
            memory: 4Gi
          requests:
            cpu: 3
            memory: 4Gi
        volumeMounts:
        - mountPath: /data
          name: ethereum-data
      initContainers:
      - command:
        - rm
        - -f
        - /data/.ethereum/geth/LOCK
        image: busybox:1.34.1
        imagePullPolicy: Always
        name: remove-lock
        resources:
          limits:
            cpu: 10m
            memory: 10Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /data
          name: ethereum-data
      - command:
        - rm
        - -f
        - /data/.ethereum/geth/nodekey
        image: busybox:1.34.1
        imagePullPolicy: Always
        name: remove-nodekey
        resources:
          limits:
            cpu: 10m
            memory: 10Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /data
          name: ethereum-data
      - args:
        - -c
        - openssl rand -hex 32 | tr -d "\n" > /data/jwt.hex
        command:
        - /bin/sh
        image: alpine/openssl@sha256:cf89651f07a33d2faf4499f72e6f8b0ee2542cd40735d51c7e75b8965c17af0e
        imagePullPolicy: Always
        name: generate-jwt
        resources:
          limits:
            cpu: 10m
            memory: 10Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /data
          name: ethereum-data
      securityContext:
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: ethereum-deployment
      terminationGracePeriodSeconds: 60
      volumes:
      - configMap:
          name: ethereum-prysm-config
        name: ethereum-prysm-config
  volumeClaimTemplates:
  - metadata:
      annotations:
        helm.sh/resource-policy: keep
      labels:
        app.kubernetes.io/name: ethereum
      name: ethereum-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
